Add option -g group to have the milter create a group-writeable socket
for communication with the MTA and set the GID of the socket to the
specified group. This makes it possible to use the milter via a
unix-domain socket with Postfix as the MTA (Postfix doesn't run as
root and would otherwise be unable to use the socket).

http://bugzilla.redhat.com/452248

diff -urNpa spamass-milter-0.4.0.orig/spamass-milter.cpp spamass-milter-0.4.0/spamass-milter.cpp
--- spamass-milter-0.4.0.orig/spamass-milter.cpp	2014-09-11 00:38:00.000000000 +0000
+++ spamass-milter-0.4.0/spamass-milter.cpp	2019-01-11 21:15:22.855000000 +0000
@@ -90,6 +90,8 @@
 #include <errno.h>
 #include <netdb.h>
 
+#include <grp.h>
+
 // C++ includes
 #include <cstdio>
 #include <cstddef>
@@ -184,8 +186,9 @@ int
 main(int argc, char* argv[])
 {
    int c, err = 0;
-   const char *args = "afd:mMp:P:r:u:D:i:b:B:e:xS:R:C:";
+   const char *args = "afd:mMp:P:r:u:D:i:b:B:e:xS:R:C:g:";
    char *sock = NULL;
+   char *group = NULL;
    bool dofork = false;
    char *pidfilename = NULL;
    FILE *pidfile = NULL;
@@ -216,6 +219,9 @@ main(int argc, char* argv[])
                 flag_full_email = true;
                 defaultdomain = strdup(optarg);
                 break;
+            case 'g':
+                group = strdup(optarg);
+                break;
             case 'i':
                 debug(D_MISC, "Parsing ignore list");
                 parse_networklist(optarg, &ignorenets);
@@ -301,6 +307,7 @@ main(int argc, char* argv[])
       cout << "                      [-C rejectcode] [ -R rejectmsg ]" << endl;
       cout << "                      [-- spamc args ]" << endl;
       cout << "   -p socket: path to create socket" << endl;
+      cout << "   -g group: socket group (perms to 660 as well)" << endl;
       cout << "   -b bucket: redirect spam to this mail address.  The orignal" << endl;
       cout << "          recipient(s) will not receive anything." << endl;
       cout << "   -B bucket: add this mail address as a BCC recipient of spam." << endl;
@@ -378,6 +385,30 @@ main(int argc, char* argv[])
 	} else {
       debug(D_MISC, "smfi_register succeeded");
    }
+
+	if (group)
+	{
+		struct group *gr;
+
+		(void) smfi_opensocket(0);
+		gr = getgrnam(group);
+		if (gr)
+		{
+			int rc;
+			rc = chown(sock, (uid_t)-1, gr->gr_gid);
+			if (!rc)
+			{
+				(void) chmod(sock, 0660);
+			} else {
+				perror("group option, chown");
+				exit(EX_NOPERM);
+			}
+		} else { 
+			perror("group option, getgrnam");
+			exit(EX_NOUSER);
+		}
+	}
+
 	debug(D_ALWAYS, "spamass-milter %s starting", PACKAGE_VERSION);
 	err = smfi_main();
 	debug(D_ALWAYS, "spamass-milter %s exiting", PACKAGE_VERSION);
